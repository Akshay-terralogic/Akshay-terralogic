{"version":3,"sources":["how-zetworks.js"],"names":["$Speed","galleryTop11","Swiper","spaceBetween","galleryThumbs11","speed","slidesPerView","touchRatio","effect","slideToClickedSlide","observer","observeParents","pagination","el","clickable","controller","control","galleryTop12","galleryThumbs12","galleryTop13","galleryThumbs13","breakpoint","window","matchMedia","mySwiper","CustomerTabslider","breakpointChecker","matches","undefined","destroy","Customerslider","loop","keyboardControl","grabCursor","addListener","PartnerTabslider","Partnerslider","ZwTabslider","zwslider","$","document","ready","on","e","image","relatedTarget","attr"],"mappings":"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","file":"how-zetworks.js","sourcesContent":["var $Speed = 800;\n\nvar galleryTop11 = new Swiper(\".zw-quote-slider11\", {\n  spaceBetween: 30,\n});\n\nvar galleryThumbs11 = new Swiper(\".zw-image-slider11\", {\n  speed: $Speed,\n  slidesPerView: \"auto\",\n  touchRatio: 0.2,\n  effect: \"fade\",\n  slideToClickedSlide: true,\n  observer: true,\n  observeParents: true,\n  pagination: {\n    el: \".swiper-pagination11\",\n    clickable: true,\n  },\n});\n\ngalleryTop11.controller.control = galleryThumbs11;\ngalleryThumbs11.controller.control = galleryTop11;\n\nvar galleryTop12 = new Swiper(\".zw-quote-slider12\", {\n  spaceBetween: 30,\n  observer: true,\n  observeParents: true,\n});\n\nvar galleryThumbs12 = new Swiper(\".zw-image-slider12\", {\n  speed: $Speed,\n  slidesPerView: \"auto\",\n  touchRatio: 0.2,\n  effect: \"fade\",\n  slideToClickedSlide: true,\n  observer: true,\n  observeParents: true,\n  pagination: {\n    el: \".swiper-pagination12\",\n    clickable: true,\n  },\n});\n\ngalleryTop12.controller.control = galleryThumbs12;\ngalleryThumbs12.controller.control = galleryTop12;\n\nvar galleryTop13 = new Swiper(\".zw-quote-slider13\", {\n  spaceBetween: 30,\n  observer: true,\n  observeParents: true,\n});\n\nvar galleryThumbs13 = new Swiper(\".zw-image-slider13\", {\n  speed: $Speed,\n  slidesPerView: \"auto\",\n  touchRatio: 0.2,\n  effect: \"fade\",\n  slideToClickedSlide: true,\n  observer: true,\n  observeParents: true,\n  pagination: {\n    el: \".swiper-pagination13\",\n    clickable: true,\n  },\n});\n\ngalleryTop13.controller.control = galleryThumbs13;\ngalleryThumbs13.controller.control = galleryTop13;\n\n// Only Mobile tabs converted to slider\n\n(function () {\n  \"use strict\";\n  // breakpoint where swiper will be destroyed\n  // and switches to a dual-column layout\n  var breakpoint = window.matchMedia(\"(min-width:31.25em)\");\n  // keep track of swiper instances to destroy later\n  var mySwiper;\n  var CustomerTabslider = mySwiper;\n\n  var breakpointChecker = function () {\n    // if larger viewport and multi-row layout needed\n    if (breakpoint.matches === true) {\n      // clean up old instances and inline styles when available\n      if (CustomerTabslider !== undefined)\n        CustomerTabslider.destroy(true, true);\n      // or/and do nothing\n      return;\n      // else if a small viewport and single column layout needed\n    } else if (breakpoint.matches === false) {\n      // fire small viewport version of swiper\n      return Customerslider();\n    }\n  };\n\n  var Customerslider = function () {\n    CustomerTabslider = new Swiper(\".zw-mobile-tabslider\", {\n      loop: false,\n      slidesPerView: 1.2,\n      spaceBetween: 20,\n      // a11y: true,\n      keyboardControl: true,\n      grabCursor: true,\n    });\n  };\n\n  // keep an eye on viewport size changes\n  breakpoint.addListener(breakpointChecker);\n  // kickstart\n  breakpointChecker();\n})(); /* IIFE end */\n\n(function () {\n  \"use strict\";\n  // breakpoint where swiper will be destroyed\n  // and switches to a dual-column layout\n  var breakpoint = window.matchMedia(\"(min-width:31.25em)\");\n  // keep track of swiper instances to destroy later\n  var mySwiper;\n  var PartnerTabslider = mySwiper;\n\n  var breakpointChecker = function () {\n    // if larger viewport and multi-row layout needed\n    if (breakpoint.matches === true) {\n      // clean up old instances and inline styles when available\n      if (PartnerTabslider !== undefined) PartnerTabslider.destroy(true, true);\n      // or/and do nothing\n      return;\n      // else if a small viewport and single column layout needed\n    } else if (breakpoint.matches === false) {\n      // fire small viewport version of swiper\n      return Partnerslider();\n    }\n  };\n\n  var Partnerslider = function () {\n    PartnerTabslider = new Swiper(\".zw-mobile-tabsliderprtner\", {\n      loop: false,\n      slidesPerView: 1.2,\n      spaceBetween: 20,\n      // a11y: true,\n      keyboardControl: true,\n      observer: true,\n      observeParents: true,\n      grabCursor: true,\n    });\n  };\n\n  // keep an eye on viewport size changes\n  breakpoint.addListener(breakpointChecker);\n  // kickstart\n  breakpointChecker();\n})(); /* IIFE end */\n\n// Third slider\n\n(function () {\n  \"use strict\";\n  // breakpoint where swiper will be destroyed\n  // and switches to a dual-column layout\n  var breakpoint = window.matchMedia(\"(min-width:31.25em)\");\n  // keep track of swiper instances to destroy later\n  var mySwiper;\n  var ZwTabslider = mySwiper;\n\n  var breakpointChecker = function () {\n    // if larger viewport and multi-row layout needed\n    if (breakpoint.matches === true) {\n      // clean up old instances and inline styles when available\n      if (ZwTabslider !== undefined) ZwTabslider.destroy(true, true);\n      // or/and do nothing\n      return;\n      // else if a small viewport and single column layout needed\n    } else if (breakpoint.matches === false) {\n      // fire small viewport version of swiper\n      return zwslider();\n    }\n  };\n\n  var zwslider = function () {\n    ZwTabslider = new Swiper(\".zw-mobile-tabsliderzw\", {\n      loop: false,\n      slidesPerView: 1.2,\n      spaceBetween: 20,\n      // a11y: true,\n      keyboardControl: true,\n      observer: true,\n      observeParents: true,\n      grabCursor: true,\n    });\n  };\n\n  // keep an eye on viewport size changes\n  breakpoint.addListener(breakpointChecker);\n  // kickstart\n  breakpointChecker();\n})(); /* IIFE end */\n\n// Loading multiple images on same page on image click\n$(document).ready(function () {\n  $(\"#GifModal\").on(\"show.bs.modal\", function (e) {\n    var image = $(e.relatedTarget).attr(\"src\");\n    $(\".zw-gif\").attr(\"src\", image);\n  });\n});\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}